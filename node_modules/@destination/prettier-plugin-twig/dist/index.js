"use strict";
const prettier_1 = require("prettier");
const parser_1 = require("./parser");
const printer_1 = require("./printer");
const languages = [
    {
        name: 'LiquidHTML',
        parsers: [parser_1.liquidHtmlLanguageName],
        extensions: ['.twig'],
        vscodeLanguageIds: ['twig', 'Twig'],
    },
];
const options = {
    liquidSingleQuote: {
        type: 'boolean',
        category: 'LIQUID',
        default: true,
        description: 'Use single quotes instead of double quotes in Liquid tags and objects.',
        since: '0.2.0',
    },
    embeddedSingleQuote: {
        type: 'boolean',
        category: 'LIQUID',
        default: true,
        description: 'Use single quotes instead of double quotes in embedded languages (JavaScript, CSS, TypeScript inside <script>, <style> or Liquid equivalent).',
        since: '0.4.0',
    },
    singleLineLinkTags: {
        type: 'boolean',
        category: 'HTML',
        default: false,
        description: 'Always print link tags on a single line to remove clutter',
        since: '0.1.0',
    },
    indentSchema: {
        type: 'boolean',
        category: 'LIQUID',
        default: false,
        description: 'Indent the contents of the {% schema %} tag',
        since: '0.1.0',
    },
};
const defaultOptions = {
    printWidth: 120,
};
const plugin2 = {
    languages,
    parsers: parser_1.parsers,
    printers: printer_1.printers2,
    options,
    defaultOptions,
};
const plugin3 = {
    languages,
    parsers: parser_1.parsers,
    printers: printer_1.printers3,
    options,
    defaultOptions,
};
const prettierMajor = prettier_1.version.split('.')[0];
module.exports = prettierMajor === '2' ? plugin2 : plugin3;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHVDQUFvRTtBQUdwRSxxQ0FBMkQ7QUFDM0QsdUNBQWlEO0FBR2pELE1BQU0sU0FBUyxHQUFzQjtJQUNuQztRQUNFLElBQUksRUFBRSxZQUFZO1FBQ2xCLE9BQU8sRUFBRSxDQUFDLCtCQUFzQixDQUFDO1FBQ2pDLFVBQVUsRUFBRSxDQUFDLE9BQU8sQ0FBQztRQUNyQixpQkFBaUIsRUFBRSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUM7S0FDcEM7Q0FDRixDQUFDO0FBRUYsTUFBTSxPQUFPLEdBQW1CO0lBQzlCLGlCQUFpQixFQUFFO1FBQ2pCLElBQUksRUFBRSxTQUFTO1FBQ2YsUUFBUSxFQUFFLFFBQVE7UUFDbEIsT0FBTyxFQUFFLElBQUk7UUFDYixXQUFXLEVBQ1Qsd0VBQXdFO1FBQzFFLEtBQUssRUFBRSxPQUFPO0tBQ2Y7SUFDRCxtQkFBbUIsRUFBRTtRQUNuQixJQUFJLEVBQUUsU0FBUztRQUNmLFFBQVEsRUFBRSxRQUFRO1FBQ2xCLE9BQU8sRUFBRSxJQUFJO1FBQ2IsV0FBVyxFQUNULCtJQUErSTtRQUNqSixLQUFLLEVBQUUsT0FBTztLQUNmO0lBQ0Qsa0JBQWtCLEVBQUU7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixRQUFRLEVBQUUsTUFBTTtRQUNoQixPQUFPLEVBQUUsS0FBSztRQUNkLFdBQVcsRUFBRSwyREFBMkQ7UUFDeEUsS0FBSyxFQUFFLE9BQU87S0FDZjtJQUNELFlBQVksRUFBRTtRQUNaLElBQUksRUFBRSxTQUFTO1FBQ2YsUUFBUSxFQUFFLFFBQVE7UUFDbEIsT0FBTyxFQUFFLEtBQUs7UUFDZCxXQUFXLEVBQUUsNkNBQTZDO1FBQzFELEtBQUssRUFBRSxPQUFPO0tBQ2Y7Q0FDRixDQUFDO0FBRUYsTUFBTSxjQUFjLEdBQUc7SUFDckIsVUFBVSxFQUFFLEdBQUc7Q0FDaEIsQ0FBQztBQUVGLE1BQU0sT0FBTyxHQUE0QjtJQUN2QyxTQUFTO0lBQ1QsT0FBTyxFQUFFLGdCQUE2QjtJQUN0QyxRQUFRLEVBQUUsbUJBQVM7SUFDbkIsT0FBTztJQUNQLGNBQWM7Q0FDZixDQUFDO0FBRUYsTUFBTSxPQUFPLEdBQTRCO0lBQ3ZDLFNBQVM7SUFDVCxPQUFPLEVBQUUsZ0JBQTZCO0lBQ3RDLFFBQVEsRUFBRSxtQkFBZ0I7SUFDMUIsT0FBTztJQUNQLGNBQWM7Q0FDZixDQUFDO0FBRUYsTUFBTSxhQUFhLEdBQUcsa0JBQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUM7QUFFN0MsaUJBQVMsYUFBYSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMifQ==